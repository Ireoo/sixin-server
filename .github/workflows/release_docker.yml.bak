name: 构建和发布

on:
  push:
    branches:
      - main # 或者您的主分支名称
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v2

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 构建和导出
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,darwin/amd64,darwin/arm64,windows/arm64,windows/amd64,windows/386 \
            --output "type=local,dest=./output" \
            --file ./Dockerfile .

      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: output/*

  release:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 下载所有构建产物
        uses: actions/download-artifact@v3

      - name: 获取路径
        run: |
          pwd
          ls -lrt

      - name: 获取当前日期
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref == 'refs/heads/main' && format('release-{0}', steps.date.outputs.date) || github.ref }}
          release_name: ${{ github.ref == 'refs/heads/main' && format('Release {0}', steps.date.outputs.date) || github.ref }}
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/main' }}

      - name: 上传 Release 资产
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            **/sixin-server_*
          tag_name: ${{ github.ref == 'refs/heads/main' && format('release-{0}', steps.date.outputs.date) || github.ref }}
          prerelease: ${{ github.ref == 'refs/heads/main' }}
